[
    {
        "title": "Sign up for uni classes",
        "text": "Deadline for signing up is August 20\nSign up for finance 355\nSign up for finance 352\nSign up for finance 359\nSign up for poli sci 355\nSign up for kines 309",
        "id": "00d83c07-4c69-4b43-8845-a347d4c80ae1"
    },
    {
        "title": "Coding Practice",
        "text": "Mon-Fri 3pm - 8pm\nReview Express.js:\nRouter() function\nDelete request for routes",
        "id": "f77a159e-7171-4677-9667-94513c76a2e4"
    },
    {
        "title": "OOP",
        "text": "Inheritance: Inheritance allows a class (subclass) to inherit properties and behaviors from another class (superclass), promoting code reuse and creating a hierarchical relationship between classes.\n\nPolymorphism: Polymorphism enables objects of different classes to be treated as instances of a common superclass, allowing methods to be invoked on these objects without knowing their specific class types.\n\nEncapsulation: Encapsulation restricts access to the internal state and implementation details of an object, promoting data hiding and providing controlled access through methods, thus protecting the object's integrity.\n\nAbstraction: Abstraction focuses on providing a simplified representation of an object's essential characteristics, hiding the irrelevant details and making complex systems easier to understand and use.",
        "id": "f372a6ec-7fa4-4777-852c-24f508f1b294"
    }
]